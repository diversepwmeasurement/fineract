jobs:
  build:
    env:
      GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}
      TZ: Asia/Kolkata
    runs-on: self-hosted
    services:
      mock-oauth2-server:
        env:
          JSON_CONFIG: '{ "interactiveLogin": true, "httpServer": "NettyWrapper",
            "tokenCallbacks": [ { "issuerId": "auth/realms/fineract", "tokenExpiry":
            120, "requestMappings": [{ "requestParam": "scope", "match": "fineract",
            "claims": { "sub": "mifos", "scope": [ "test" ] } } ] } ] }'
          SERVER_PORT: 9000
        image: ghcr.io/navikt/mock-oauth2-server:2.1.1
        ports:
        - 9000:9000
      postgresql:
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: root
        image: postgres:16.1
        options: --health-cmd="pg_isready -q -d postgres -U root" --health-interval=5s
          --health-timeout=2s --health-retries=3
        ports:
        - 5432:5432
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633
      with:
        fetch-depth: 0
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9
      with:
        cache: gradle
        distribution: zulu
        java-version: '17'
    - continue-on-error: true
      uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8
      with:
        node-version: 16
    - continue-on-error: true
      name: Congfigure vega-cli
      run: npm i -g vega-cli --unsafe
    - continue-on-error: true
      name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@b231772637bb498f11fdbc86052b6e8a8dc9fc92
    - continue-on-error: true
      name: Verify PostgreSQL connection
      run: "while ! pg_isready -d postgres -U root -h 127.0.0.1 -p 5432 ; do\n   \
        \ sleep 1\ndone\n"
    - continue-on-error: true
      name: Initialise databases
      run: './gradlew --no-daemon -q createPGDB -PdbName=fineract_tenants

        ./gradlew --no-daemon -q createPGDB -PdbName=fineract_default

        '
    - continue-on-error: true
      env:
        AWS_ACCESS_KEY_ID: localstack
        AWS_ENDPOINT_URL: http://localhost:4566
        AWS_REGION: us-east-1
        AWS_SECRET_ACCESS_KEY: localstack
      name: Start LocalStack
      run: 'docker run -d --name localstack -p 4566:4566 -p 4510-4559:4510-4559 localstack/localstack:2.1

        sleep 10

        docker exec localstack awslocal s3api create-bucket --bucket fineract-reports

        echo "LocalStack initialization complete"

        '
    - continue-on-error: true
      name: Install additional software
      run: 'sudo apt-get update

        sudo apt-get install ghostscript graphviz -y

        '
    - continue-on-error: true
      env:
        AWS_ACCESS_KEY_ID: localstack
        AWS_ENDPOINT_URL: http://localhost:4566
        AWS_REGION: us-east-1
        AWS_SECRET_ACCESS_KEY: localstack
        FINERACT_REPORT_EXPORT_S3_BUCKET_NAME: fineract-reports
        FINERACT_REPORT_EXPORT_S3_ENABLED: true
      name: Build & Test
      run: './gradlew --no-daemon --console=plain build -x cucumber -x test -x doc

        ./gradlew --no-daemon --console=plain cucumber -x :fineract-e2e-tests-runner:cucumber

        ./gradlew --no-daemon --console=plain test -x :twofactor-tests:test -x :oauth2-test:test
        :fineract-e2e-tests-runner:test -PdbType=postgresql

        ./gradlew --no-daemon --console=plain :twofactor-tests:test -PdbType=postgresql

        ./gradlew --no-daemon --console=plain :oauth2-tests:test -PdbType=postgresql

        '
    - continue-on-error: true
      if: always()
      name: Archive test results
      uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3
      with:
        name: test-results
        path: 'build/reports/

          integration-tests/build/reports/

          twofactor-tests/build/reports/

          oauth2-tests/build/reports/

          '
    - continue-on-error: true
      if: always()
      name: Archive server logs
      uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3
      with:
        name: server-logs
        path: 'integration-tests/build/cargo/

          twofactor-tests/build/cargo/

          oauth2-tests/build/cargo/

          '
name: Fineract Build & Test - PostgreSQL
on:
  repository_dispatch:
    types: trigger-ga___build-postgresql.yml
permissions:
  contents: read
